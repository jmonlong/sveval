% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svOverlap.R
\name{svOverlap}
\alias{svOverlap}
\title{Overlap SVs}
\usage{
svOverlap(query, subject, min.ol = 0.5, method = c("reciprocal",
  "coverage", "bipartite"), max.ins.dist = 20, min.del.rol = 0.1,
  ins.seq.comp = FALSE, nb.cores = 1)
}
\arguments{
\item{query}{a GRanges object with SVs}

\item{subject}{another GRanges object with SVs}

\item{min.ol}{the minimum overlap/coverage to be considered a match. Default is 0.5}

\item{method}{the method to annotate the overlap. Either 'coverage' (default) for the
cumulative coverage (e.g. to deal with fragmented calls); or 'bipartite' for a 1-to-1
matching of variants in the calls and truth sets.}

\item{max.ins.dist}{maximum distance for insertions to be clustered. Default is 20.}

\item{min.del.rol}{minimum reciprocal overlap for deletions. Default is 0.1}

\item{ins.seq.comp}{compare sequence instead of insertion sizes. Default is FALSE.}

\item{nb.cores}{number of processors to use. Default is 1.}
}
\value{
a GRanges with information about pairs of SVs in query and subject that overlap
\item{GRange}{intersected ranges (informative for "ranges" SVs)}
\item{queryHits}{the id of the input query}
\item{subjectHits}{the id of the input subject}
\item{querSize}{the size of the input query}
\item{subjectSize}{the size of the input subject}
\item{interSize}{the size of the intersection (e.g. range, ins size, ins seq alignment)}
\item{olScore}{the overlap score (usually the value of the reciprocal overlap)}
\item{type}{the SV type of the pair}
}
\description{
Overlap SVs by SV type using one of the overlap approaches (see below). Variants covering a
genomic range (e.g. deletions, duplications, inversions) are overlapped while insertions are
clustered (using \code{max.ins.dist}) and their size or sequence (if \code{ins.seq.comp})
are compared.
}
\details{
Available overlap approaches, passed with \code{method=}, include: reciprocal, coverage,
bipartite. If you are using this function directly, you might be interested in the
'reciprocal' method (default). When evaluating SVs versus a truthset, \code{svevalOl} uses
the 'coverage' method to compare calls (absence/presence) and 'bipartite' to compare
genotypes (when run with the recommended settings).

The "reciprocal" method corresponds to the simple reciprocal overlap for the variants covering a
genomic range (e.g. deletions, duplications, inversions), or the reciprocal size/sequence
similarity for insertions.

With the "coverage" approach, a variant needs to be covered enough by variants from the
other set to be counted "matched" or "overlapped". Here again, the ranges are overlapped for
SV spanning a genomic region while for insertions, the size or aligned sequences are summed.

With the "bipartite" approach, the variants are first matched using the reciprocal
overlap method (see "reciprocal"), and then matched one-to-one using bipartite clustering.
This ensures that a variant in one set is only matched to one variant in the other set.
Useful when comparing genotypes for example when redundancy should be penalized.
}
\author{
Jean Monlong
}
